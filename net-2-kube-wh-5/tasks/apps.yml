# Создать namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-ingress
  labels:
    name: test-ingress

# Создать Deployment приложения _frontend_ из образа nginx с количеством реплик 3 шт.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: test-ingress
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 3
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
          name: http-std
        resources:
          limits:
            memory: 256Mi
            cpu: "0.5"
          requests:
            memory: 128Mi
            cpu: "0.1"

# Создать Deployment приложения _backend_ из образа multitool.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  backend
  namespace: test-ingress
  labels:
    app:  backend
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 1
  template:
    metadata:
      labels:
        app:  backend
    spec:
      containers:
      - name: multitool
        image: wbitt/network-multitool
        env:
          - name: HTTP_PORT
            value: "1180"
        ports:
          - containerPort: 1180
            name: http-port
        resources:
          requests:
            cpu: "1m"
            memory: "20Mi"
          limits:
            cpu: "10m"
            memory: "20Mi"

# Добавить Service, которые обеспечат доступ к обоим приложениям внутри кластера.
# Service frontend
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: test-ingress
spec:
  selector:
    app: frontend
  type: ClusterIP
  ports:
  - name: nginx
    protocol: TCP
    port: 80
    targetPort: http-std
# Service backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: test-ingress
spec:
  selector:
    app: backend
  type: ClusterIP
  ports:
  - name: nginx
    protocol: TCP
    port: 80
    targetPort: http-port

# TesterPod
#---
#apiVersion: v1
#kind: Pod
#metadata:
#  name: tester13
#  namespace: default
#spec:
#  containers:
#  - name: tester13
#    image: wbitt/network-multitool
#    command: ["/bin/sh", "-c", "while true; do sleep 30; done"]
#    resources:
#      requests:
#        cpu: "1m"
#        memory: "20Mi"
#      limits:
#        cpu: "10m"
#        memory: "20Mi"
